数组
# 二分查找

## NO.704

题解

```java
class Solution {
    public int search(int[] nums, int target) {
        //为避免多次循环，提前看是否超出范围
        if(target<nums[0]||target>nums[nums.length-1]){
            return -1;
        }
        int left = 0;
        int right = nums.length-1;//定义target在[left，right]区间内
        while(left<=right){
            int middle = (left+right)/2;
            if(nums[middle]>target){//target在[left,middle-1]
                right = middle - 1 ;
            }else if(nums[middle]<target){//target在[middle+1,right]
                left = middle+1;
            }else if(nums[middle]==target){//相等直接返回下标
                return middle;
            }
        }
        return -1;//未找到
    }
}
```

## NO.35

题解

```java
class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0;
        int right = nums.length-1;
        
        while(left<=right){
            int mid = left+(right-left)/2;
            if(nums[mid]==target){
                return mid;
            }else if(nums[mid]>target){
                right = mid - 1;
            }else if(nums[mid]<target){
                left = mid + 1;
            }
        }
        return left;
    }
}
```

